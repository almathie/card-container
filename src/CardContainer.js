// Generated by CoffeeScript 1.3.3
(function() {

  (function($, window) {
    var CardContainer, defaults, document, pluginName;
    pluginName = 'cardcontainer';
    document = window.document;
    defaults = {
      property: 'value'
    };
    CardContainer = (function() {

      function CardContainer(containerElement, options) {
        this.containerElement = containerElement;
        this.options = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
      }

      CardContainer.prototype.init = function() {
        var _this = this;
        $('[card-index]', this.containerElement).hide();
        $("[card-index='0']", this.containerElement).show();
        this.currentIndex = 0;
        return $(this.containerElement).on('click.card-container', "[card-change]", function(event) {
          switch ($(event.target).attr('card-change')) {
            case "next":
              return _this.next();
            case "previous":
              return _this.previous();
            default:
              if (!isNaN($(event.target).attr('card-change') - 0)) {
                return _this.changeCard($(event.target).attr('card-change'));
              }
          }
        });
      };

      CardContainer.prototype.next = function() {
        return this.changeCard(this.currentIndex + 1);
      };

      CardContainer.prototype.previous = function() {
        return this.changeCard(this.currentIndex - 1);
      };

      CardContainer.prototype.first = function() {
        return this.changeCard(0);
      };

      CardContainer.prototype.changeCard = function(newIndex) {
        var newCard, oldCard,
          _this = this;
        newCard = $("[card-index=\"" + newIndex + "\"]", this.containerElement);
        oldCard = [];
        if (!(newCard.size() > 0)) {
          return;
        }
        if (newIndex === this.currentIndex) {
          return;
        }
        $(newCard).each(function(index, element) {
          return (function(element) {
            $(element).trigger('appear');
            $(element).show();
            return $(element).trigger('appeared');
          })(element);
        });
        $('[card-index]', this.containerElement).each(function(index, element) {
          var i;
          i = $(element).attr('card-index');
          if (i !== newIndex + '') {
            if ($(element).is(':visible')) {
              oldCard.push($(element));
              $(element).trigger('disappear');
              $(element).hide();
              return $(element).trigger('disappeared');
            }
          }
        });
        this.currentIndex = newIndex - 0;
        this.updateButtons();
        return $(this.containerElement).trigger('card-changed', oldCard, newCard);
      };

      CardContainer.prototype.updateButtons = function() {
        var _this = this;
        if ($("[card-index=\"" + (this.currentIndex + 1) + "\"]", this.containerElement).size() > 0) {
          $("[card-change=\"next\"]", this.containerElement).each(function(index, element) {
            return $(element).show();
          });
        } else {
          $("[card-change=\"next\"]", this.containerElement).each(function(index, element) {
            return $(element).hide();
          });
        }
        if ($("[card-index=\"" + (this.currentIndex - 1) + "\"]", this.containerElement).size() > 0) {
          return $("[card-change=\"previous\"]", this.containerElement).each(function(index, element) {
            return $(element).show();
          });
        } else {
          return $("[card-change=\"previous\"]", this.containerElement).each(function(index, element) {
            return $(element).hide();
          });
        }
      };

      return CardContainer;

    })();
    return $.fn[pluginName] = function(options) {
      return this.each(function() {
        if (!$.data(this, "plugin_" + pluginName)) {
          $.data(this, "plugin_" + pluginName, new CardContainer(this, options));
        }
        if (typeof options === 'string') {
          return $.data(this, "plugin_" + pluginName)[options]();
        }
      });
    };
  })(jQuery, window);

  $(function() {
    return $('.card-container').cardcontainer();
  });

  /*
  $ ->
  	$('.card-container').each ->
  		new CardContainer($(this))
  */


}).call(this);
